{"version":3,"sources":["api/apiSLice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","hooks/http.hook.js","components/heroesFilters/filtersSlice.js","store/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","index.js"],"names":["apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getHeroes","query","providesTags","createHero","mutation","hero","url","method","body","invalidatesTags","deleteHero","id","concat","useGetHeroesQuery","useCreateHeroMutation","useDeleteHeroMutation","HeroesListItem","_ref","elementClassName","name","description","element","onDelete","_jsxs","className","children","_jsx","src","alt","style","onClick","type","aria-label","Spinner","role","HeroesList","_useGetHeroesQuery","_useGetHeroesQuery$da","data","heroes","isLoading","isError","_useDeleteHeroMutatio","_slicedToArray","activeFilter","useSelector","state","filters","filteredHeroes","useMemo","slice","filter","item","useCallback","arr","elements","length","CSSTransition","timeout","classNames","map","props","_objectWithoutProperties","_objectSpread","TransitionGroup","component","useHttp","request","_asyncToGenerator","_regeneratorRuntime","mark","_callee","headers","response","_args","arguments","wrap","_context","prev","next","undefined","fetch","sent","ok","Error","status","json","abrupt","t0","stop","_x","apply","filtersAdapter","createEntityAdapter","initialState","getInitialState","filtersLoadingStatus","fetchFilters","createAsyncThunk","_useHttp","filtersSlice","createSlice","reducers","filtersFetching","filtersFetched","action","setAll","payload","filtersFetchingError","activeFilterChanged","extraReducers","addCase","pending","fulfilled","rejected","addDefaultCase","actions","reducer","selectAll","getSelectors","stringMiddleware","store","configureStore","_defineProperty","middleware","getDefaultMiddleware","devTools","process","HeroesAddForm","_useCreateHeroMutatio","getState","Formik","initialValues","validationSchema","Yup","min","required","onSubmit","values","_ref2","resetForm","uuidv4","newHero","unwrap","onSubmitHandler","Form","htmlFor","Field","placeholder","ErrorMessage","as","value","label","renderFilters","HeroesFilters","_useSelector","dispatch","useDispatch","useEffect","btnClass","App","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.ddf181ea.chunk.js","sourcesContent":["\r\nimport {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react';\r\n\r\nexport const apiSlice = createApi({\r\n    reducerPath: 'api',\r\n    baseQuery: fetchBaseQuery({baseUrl: 'http://localhost:3001'}),\r\n    tagTypes: ['Heroes'],\r\n    endpoints: (builder) => ({\r\n        getHeroes: builder.query({\r\n            query: () => '/heroes',\r\n            providesTags: ['Heroes']\r\n        }),\r\n        createHero: builder.mutation({\r\n            query: (hero) => ({\r\n                url: '/heroes',\r\n                method: 'POST',\r\n                body: hero\r\n            }),\r\n            invalidatesTags: ['Heroes']\r\n        }),\r\n        deleteHero: builder.mutation({\r\n            query: id => ({\r\n                url: `/heroes/${id}`,\r\n                method: 'DELETE',\r\n                body: id\r\n            }),\r\n            invalidatesTags: ['Heroes']\r\n        })\r\n    })\r\n})\r\n\r\nexport const {useGetHeroesQuery, useCreateHeroMutation, useDeleteHeroMutation} = apiSlice;","\nconst HeroesListItem = ({name, description, element, onDelete}) => {\n\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\" \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown hero\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span onClick={onDelete} className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\">\n\n                </button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","\nimport { useCallback, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup} from 'react-transition-group';\n\nimport { useGetHeroesQuery, useDeleteHeroMutation } from '../../api/apiSLice';\n\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\n\nimport './heroesList.scss';\n\n// Задача для этого компонента:\n// При клике на \"крестик\" идет удаление персонажа из общего состояния\n// Усложненная задача:\n// Удаление идет и с json файла при помощи метода DELETE\n\nconst HeroesList = () => {\n\n    const {\n        data: heroes = [],\n        isLoading,\n        isError,\n    } = useGetHeroesQuery();\n\n    const [deleteHero] = useDeleteHeroMutation();\n\n    const activeFilter = useSelector(state => state.filters.activeFilter);\n\n    const filteredHeroes = useMemo(() => {\n        const filteredHeroes = heroes.slice();\n\n        if (activeFilter === 'all') {\n            return filteredHeroes;\n        } else{\n            return filteredHeroes.filter(item => item.element === activeFilter);\n        }\n    }, [heroes, activeFilter])\n\n    const onDelete = useCallback((id) => {\n        deleteHero(id);\n        // eslint-disable-next-line\n    }, []);\n\n    if (isLoading) {\n        return <Spinner/>;\n    } else if (isError) {\n        return <h5 className=\"text-center mt-5\">Error loading</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return  <CSSTransition\n                        timeout={0}\n                        classNames=\"hero\">\n                        <h5 className=\"text-center mt-5\">There is no heroes here...</h5>\n                    </CSSTransition>\n        }\n        \n        return arr.map(({id, ...props}) => {\n            return  <CSSTransition\n                        key={id}\n                        timeout={300}\n                        classNames=\"hero\">\n                        <HeroesListItem  {...props} onDelete={() => onDelete(id)} />\n                    </CSSTransition>\n        })\n    }\n\n    const elements = renderHeroesList(filteredHeroes);\n    return (\n        <TransitionGroup component=\"ul\">\n            {elements}\n        </TransitionGroup>\n    )\n}\n\nexport default HeroesList;","\nexport const useHttp = () => {\n\n    const request = async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            throw e;\n        }\n    };\n\n    return {request};\n}","\r\nimport { createAsyncThunk, createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\n\r\nconst filtersAdapter = createEntityAdapter();\r\n\r\nconst initialState = filtersAdapter.getInitialState({\r\n    filtersLoadingStatus: 'idle',\r\n    activeFilter: 'all',\r\n});\r\n\r\nconst path =\r\n    process.env.NODE_ENV === 'development'\r\n    ? `http://localhost:3001`\r\n    : `https://raw.githubusercontent.com/Khandohii/hero-admin-panel/blob/main/heroes.json`;\r\n\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    'filters/fetchFilters',\r\n    async () => {\r\n        const {request} = useHttp();\r\n        return await request(`${path}/filters`);\r\n    }\r\n)\r\n\r\nconst filtersSlice = createSlice({\r\n    name: 'filters',\r\n    initialState,\r\n    reducers: {\r\n        filtersFetching: state => { state.filtersLoadingStatus = \"loading\" },\r\n\r\n        filtersFetched: (state, action) => {\r\n            state.filtersLoadingStatus = 'idle';\r\n            filtersAdapter.setAll(state, action.payload);\r\n        },\r\n\r\n        filtersFetchingError: state => { state.filtersLoadingStatus = \"error\" },\r\n\r\n        activeFilterChanged: (state, action) => {\r\n            state.activeFilter = action.payload;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchFilters.pending, state => { state.filtersLoadingStatus = \"loading\" })\r\n            .addCase(fetchFilters.fulfilled, (state, action) => {\r\n                state.filtersLoadingStatus = 'idle';\r\n                filtersAdapter.setAll(state, action.payload);\r\n            })\r\n            .addCase(fetchFilters.rejected, state => { state.filtersLoadingStatus = \"error\" })\r\n            .addDefaultCase(() => {})\r\n    }\r\n});\r\n\r\nconst {actions, reducer} = filtersSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {selectAll} = filtersAdapter.getSelectors(state => state.filters);\r\n\r\nexport const {\r\n    filtersFetching,\r\n    filtersFetched,\r\n    filtersFetchingError,\r\n    activeFilterChanged\r\n} = actions;","\nimport { configureStore } from '@reduxjs/toolkit';\nimport filters from '..//components/heroesFilters/filtersSlice';\nimport { apiSlice } from '../api/apiSLice';\n\nconst stringMiddleware = () => (next) => (action) => {\n    if (typeof action === 'string') {\n        return next({\n            type: action,\n        })\n    }\n    return next(action);\n}\n\nconst store = configureStore({\n    reducer: {\n        filters, \n        [apiSlice.reducerPath]: apiSlice.reducer\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware, apiSlice.middleware),\n    devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport default store;\n","\n\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSelector } from \"react-redux\";\nimport store from \"../../store\";\nimport { selectAll } from \"../heroesFilters/filtersSlice\";\nimport { useCreateHeroMutation } from \"../../api/apiSLice\";\n\nconst HeroesAddForm = () => {\n    const [createHero] = useCreateHeroMutation();\n\n    const {filtersLoadingStatus} = useSelector(state => state.filters);\n    const filters = selectAll(store.getState());\n\n    const onSubmitHandler = (newHero, resetForm) => {\n        createHero(newHero).unwrap();\n        resetForm()\n    }\n\n    const renderFilters = (filters, status) => {\n        if (status === \"loading\") {\n            return <option>Loading elements</option>\n        } else if (status === \"error\") {\n            return <option>Error loading</option>\n        }\n        \n        if (filters && filters.length > 0 ) {\n            return filters.map(({name, label}) => {\n                if (name === 'all')  return;\n\n                return <option key={name} value={name}>{label}</option>\n            })\n        }\n    }\n\n    return (\n        <Formik\n            initialValues = {{\n                name: '',\n                description: '',\n                element: '',\n            }}\n\n            validationSchema = {Yup.object({\n                name: Yup.string()\n                        .min(2, \"Minumum length - 2 symbols!\")\n                        .required('Required field'),\n\n                description: Yup.string()\n                        .min(5, 'Mininum 5 symbols'),\n\n                element: Yup.string()\n                        .required('Choose a skill'),\n    \n            })}\n            \n            onSubmit = {(values, { resetForm }) => {\n                const id = uuidv4();\n                onSubmitHandler({id, ...values}, resetForm)\n            }}\n        >\n            <Form className=\"border p-4 shadow-lg rounded\">\n                <div className=\"mb-3\">\n                    <label htmlFor=\"name\" className=\"form-label fs-4\">Name of a new hero</label>\n\n                    <Field\n                        id=\"name\"\n                        name=\"name\"\n                        className=\"form-control\" \n                        required\n                        type=\"text\" \n                        placeholder=\"What is my name?\"\n                    />\n                    <ErrorMessage className='text-danger mt-1' name='name' component='div'/>\n                </div>\n\n                <div className=\"mb-3\">\n                    <label htmlFor=\"description\" className=\"form-label fs-4\">Description</label>\n\n                    <Field\n                        required\n                        name=\"description\" \n                        className=\"form-control\" \n                        id=\"description\" \n                        placeholder=\"What can I do?\"\n                        style={{\"height\": '130px'}}\n                        as=\"textarea\"\n                    />\n                    <ErrorMessage className='text-danger mt-1' name='description' component='div'/>\n                </div>\n\n                <div className=\"mb-3\">\n                    <label htmlFor=\"element\" className=\"form-label\">Choose hero element</label>\n                    <Field\n                        required\n                        className=\"form-select\" \n                        id=\"element\" \n                        name=\"element\"\n                        as=\"select\"\n                        >\n                            <option value=\"\">I own the element...</option>\n                            {renderFilters(filters, filtersLoadingStatus)}\n                    </Field>\n                    <ErrorMessage className='text-danger mt-1' name='element' component='div'/>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary\">Create</button>\n            </Form>\n        </Formik>\n    )\n}\n\nexport default HeroesAddForm;","\nimport {useHttp} from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchFilters, activeFilterChanged, selectAll } from './filtersSlice';\nimport classNames from 'classnames';\n\nimport store from '../../store';\n\nimport Spinner from '../spinner/Spinner';\n\nconst HeroesFilters = () => {\n\n    const {filtersLoadingStatus, activeFilter} = useSelector(state => state.filters);\n    const filters = selectAll(store.getState());\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchFilters(request));\n            \n        // eslint-disable-next-line\n    }, []);\n\n    if (filtersLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (filtersLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Error loading</h5>\n    }\n\n    const renderFilters = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">There aren't filters yet...</h5>\n        }\n        \n        return arr.map(({name, className, label}) => {\n\n            const btnClass = classNames('btn', className, {\n                'active': name === activeFilter\n            });\n            \n            return <button \n                    key={name} \n                    id={name} \n                    className={btnClass}\n                    onClick={() => dispatch(activeFilterChanged(name))}\n                    >\n                        {label}\n                    </button>\n        })\n    }\n\n    const elements = renderFilters(filters);\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Filter heroes by element</p>\n                <div className=\"btn-group\">\n                    {elements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}